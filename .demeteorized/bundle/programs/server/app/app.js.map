{"version":3,"sources":["meteor://ðŸ’»app/imports/api/compiler/compiler.js","meteor://ðŸ’»app/imports/api/documents/documents.js","meteor://ðŸ’»app/server/main.js"],"names":[],"mappings":";;;;;;;;AAGA;;AACA;;;;;;;;;;;AAEA,IAAI,OAAO,QAAP,EAAiB;AACnB,SAAO,OAAP,CAAe;AACb;AAAW,uBAAS,KAAT,EAAgB,OAAhB,EAAyB;AAClC,YAAI,SAAS,IAAI,MAAJ,EAAT,CAD8B;AAElC,YAAI,YAAY,KAAZ,CAF8B;AAGlC,YAAI,WAAW,+BAAK,OAAL,CAAa,SAAb,EAAwB,OAAxB,CAAX;;AAH8B,cAKlC,WAAc,QAAd,EALkC;AAMlC,eAAO,OAAO,IAAP,EAAP,CANkC;OAAzB;;;OAAX;;AASD;AAAU,wBAAW;;AAEvB,YAAI,QAAQ,gCAAR,CAFmB;AAGvB,YAAI,SAAS,+BAAK,OAAL,CAAa,KAAb,EAAoB,CAApB,CAAT;AAHmB,aAIlB,IAAI,YAAJ,2CAAoB,OAAO,SAAP,CAAzB,EAA2C;;AAExC,kBAAQ,GAAR,CAAY,eAAe,IAAf,GAAsB,OAAO,SAAP,CAAiB,YAAjB,EAA+B,QAA/B,CAAlC,CAFwC;AAGxC,kBAAQ,GAAR,CAAY,eAAe,IAAf,GAAsB,KAAK,KAAL,CAAY,OAAO,SAAP,CAAiB,YAAjB,cAAZ,CAAtB,CAAZ,CAHwC;SAA3C;OAJY;;;OAAV;;GAVD,EADmB;CAArB,uG;;;;;;;;;;;ACNA;;AAEA,YAAY,IAAI,aAAM,UAAN,CAAiB,WAArB,CAAZ,sD;;;;;;;;;;;;;;;;;;;;;;;;ACFA;;AACA;;AACA;;AACA;;AAEA,eAAO,OAAP,CAAe,YAAM;AACnB,UAAQ,GAAR,CAAY,SAAZ,GAAwB,6GAAxB,CADmB;CAAN,CAAf,sG","file":"/app.js","sourcesContent":["//import compile from './node_modules/solc/bin/soljson-latest.js';\n//import solc from './bin/soljson-latest.js';\n//import solc from 'solc';\nimport { solc } from 'meteor/silentcicero:solc-compiler';\nimport async from 'async';\n\nif (Meteor.isServer) {\n\t Meteor.methods({\n    'compile': function(input, options) {\n      var future = new Future();\n      var codeInput = input;\n      var response = solc.compile(codeInput, options);\n      //return response;\n      future.return(response);\n      return future.wait();\n    },\n\n   'solcer': function() {\n    //var solc = require('solc');\n\tvar input = \"contract x { function g() {} }\";\n\tvar output = solc.compile(input, 1); // 1 activates the optimiser\n\tfor (var contractName in output.contracts) {\n    // code and ABI that are needed by web3\n    console.log(contractName + ': ' + output.contracts[contractName].bytecode);\n    console.log(contractName + '; ' + JSON.parse( output.contracts[contractName].interface));\n\t}\n} \n\n  });\n}\n\n\n\n","import { Mongo } from 'meteor/mongo';\n\nDocuments = new Mongo.Collection('Documents');\n","import { Meteor } from 'meteor/meteor';\nimport '../imports/startup/server/index.js';\nimport '../imports/api/documents/documents.js';\nimport '../imports/api/compiler/compiler.js';\n\nMeteor.startup(() => {\n  process.env.MONGO_URL = 'mongodb://root:xAw5orybyg@olympia.modulusmongo.net:27017/ymEhe9ju?autoReconnect=true&connectTimeoutMS=60000';\n});\n"]}